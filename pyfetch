#!/usr/bin/env python

import glob, os
env = os.environ

def get_line(file, linenum):
    try:
        with open(file, "r") as f:
            return f.readlines()[linenum - 1].replace("\n", "")
    except:
        return "[ERROR]: could not open '" + file + "'"

def get_cpu():
    return get_line("/proc/cpuinfo", 5).split(':')[1]

def get_distro():
    line = get_line("/etc/os-release", 3)
    return line.split('=')[1].replace('"', "")

def read_file(file):
    try:
        with open(file, "r") as f:
            content = f.read().replace("\n", "")
            return content
    except:
        return "[ERROR]: could not open '" + file + "'"

def get_packages(mngr):
    if mngr != "portage":
        return("[ERROR]: sorry, only portage is supported right now")
    with open("/var/lib/portage/world", "r") as w:
        explicit = str(len(w.readlines()))
    total = str(len(glob.glob("/var/db/pkg/*/*")))
    return explicit + " (explicit) " + total + " (total)"

def get_uptime():
    raw_uptime = int(read_file("/proc/uptime").split('.')[0])
    if raw_uptime > 86400:
        days = str(raw_uptime / 60 / 60 / 24).split('.')[0] + 'd'
    if raw_uptime > 3600:
        hours = str((raw_uptime / 60 / 60) % 24).split('.')[0] + 'h'
    if raw_uptime > 60:
        minutes = str((raw_uptime / 60) % 60).split('.')[0] + 'm'
    return days + ' ' + hours + ' ' + minutes

cpu      = get_cpu()
distro   = get_distro()
editor   = env['EDITOR']
hostname = read_file("/etc/hostname")
kernel   = read_file("/proc/sys/kernel/osrelease")
packages = get_packages("portage")
shell    = env['SHELL']
uptime   = get_uptime()
user     = env['USER']

print("cpu      = " + cpu[1:]  + "\n" +
      "distro   = " + distro   + "\n" +
      "editor   = " + editor   + "\n" +
      "hostname = " + hostname + "\n" +
      "kernel   = " + kernel   + "\n" +
      "packages = " + packages + "\n" +
      "shell    = " + shell    + "\n" +
      "uptime   = " + uptime   + "\n" +
      "user     = " + user)
